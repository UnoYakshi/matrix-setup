version: '2.3'
services:
  matrix-ngx:
    container_name: matrix-ngx
    image: snowinmars/matrix-ngx
    depends_on:
      - matrix-element
    # restart: unless-stopped
    build:
      context: ./ngx
      dockerfile: ./Dockerfile
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./ngx/default.conf:/etc/nginx/conf.d/default.conf
      - ./ngx/https.conf:/etc/nginx/https.conf
      - ./ngx/cors.conf:/etc/nginx/cors.conf
      - ./ngx/acme-challenge:/var/www/html/acme-challenge
      - ./crt/letsencrypt:/etc/letsencrypt
    networks:
      default:
        ipv4_address: 10.10.10.100

  matrix-postgres:
    container_name: matrix-postgres
    image: snowinmars/matrix-postgres
    build:
      context: ./postgres
      dockerfile: ./Dockerfile
    # restart: unless-stopped
    networks:
      default:
        ipv4_address: 10.10.10.2
    volumes:
      - ./postgres/postgresdata:/var/lib/postgresql/data
    # These will be used in homeserver.yaml later on
    environment:
      - POSTGRES_DB=synapse
      - POSTGRES_USER=synapse
      - POSTGRES_PASSWORD=kljfdgkjbflkbjnlkdjfhg
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C

  matrix-synapse:
    container_name: matrix-synapse
    image: matrixdotorg/synapse:latest
    build:
      context: ./synapse
    depends_on:
      - matrix-postgres
    # restart: unless-stopped
    volumes:
      - ./synapse:/data
    networks:
      default:
        ipv4_address: 10.10.10.3

  matrix-element:
    container_name: matrix-element
    image: vectorim/element-web:latest
    build:
      context: ./element
    depends_on:
      - matrix-synapse
    # restart: unless-stopped
    volumes:
      - ./element/config.json:/app/config.json
    networks:
      default:
        ipv4_address: 10.10.10.4

networks:
  default:
    external:
      name: matrix_net